(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    187770,       3860]
NotebookOptionsPosition[    184557,       3799]
NotebookOutlinePosition[    184965,       3815]
CellTagsIndexPosition[    184922,       3812]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", "4866"}], ";", 
  RowBox[{"m", "=", "2433"}], ";", 
  RowBox[{"k2", "=", "80000"}], ";", 
  RowBox[{"c2", "=", "10000"}], ";", 
  RowBox[{"omega", "=", "2.2143"}], ";", 
  RowBox[{"k1", "=", 
   RowBox[{"1025", "*", "9.8", "*", "Pi"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"f", "=", "4890"}], ";", 
  RowBox[{"c1", "=", "167.8395"}], ";", 
  RowBox[{"m0", "=", "1165.992"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"start", "=", "510"}], ";", 
  RowBox[{"stop", "=", "520"}], ";", 
  RowBox[{"dim", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"P2", "[", "cm2_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"cm2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x1", "'"}], "[", "i", "]"}], "-", 
           RowBox[{
            RowBox[{"x2", "'"}], "[", "i", "]"}]}], ")"}], "^", "2"}], ")"}], 
       "*", "dim"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "start", ",", "stop", ",", "dim"}], "}"}]}], "]"}], "/.",
     " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"m", "*", 
          RowBox[{
           RowBox[{"x2", "''"}], "[", "t", "]"}]}], "==", 
         RowBox[{
          RowBox[{"k2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x1", "[", "t", "]"}], "-", 
             RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"cm2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"x1", "'"}], "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"x2", "'"}], "[", "t", "]"}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"f", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"omega", "*", "t"}], "]"}]}], "==", 
         RowBox[{
          RowBox[{"k2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x1", "[", "t", "]"}], "-", 
             RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"cm2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"x1", "'"}], "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"x2", "'"}], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"k1", "*", 
           RowBox[{"x1", "[", "t", "]"}]}], "+", 
          RowBox[{"c1", "*", 
           RowBox[{
            RowBox[{"x1", "'"}], "[", "t", "]"}]}], "+", 
          RowBox[{"m0", "*", 
           RowBox[{
            RowBox[{"x1", "''"}], "[", "t", "]"}]}], "+", 
          RowBox[{"M", "*", 
           RowBox[{
            RowBox[{"x1", "''"}], "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"x1", "[", "0", "]"}], "==", 
         RowBox[{"x2", "[", "0", "]"}], "==", 
         RowBox[{
          RowBox[{"x1", "'"}], "[", "0", "]"}], "==", 
         RowBox[{
          RowBox[{"x2", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "start", ",", "stop"}], "}"}]}], "]"}]}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"P2", "[", "x", "]"}], "]"}], ",", 
       RowBox[{"0", "<=", "x", "<=", "10000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "5000"}], "}"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DrawP2", "[", 
    RowBox[{"pStart_", ",", "pStop_", ",", "pStepNum_"}], "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"i", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pStop", "-", "pStart"}], ")"}], "/", "pStepNum"}]}], ",", 
        
        RowBox[{"First", "[", 
         RowBox[{"P2", "[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"pStart", ",", "pStop", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pStop", "-", "pStart"}], ")"}], "/", "pStepNum"}]}], 
         "]"}]}], "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"DrawP2Diff", "[", 
     RowBox[{"start_", ",", "stop_", ",", "stepNum_"}], "]"}], ":=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "*", "1000"}], ",", 
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{"P2", "'"}], "[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"start", ",", "stop", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"stop", "-", "start"}], ")"}], "/", "stepNum"}]}], 
          "]"}]}], "}"}]}], "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DrawP2", "[", 
    RowBox[{"0", ",", "100000", ",", "100"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DrawP2", "[", 
    RowBox[{"30000", ",", "40000", ",", "100"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DrawP2", "[", 
    RowBox[{"34000", ",", "36000", ",", "100"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DrawP2Diff", "[", 
    RowBox[{"34000", ",", "36000", ",", "100"}], "]"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"P2", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "100000", ",", "1000"}], "]"}]}], "}"}]}], "]"}], 
    "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", 
  RowBox[{"P2", "[", "100", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.872372286568123*^9, 3.872372286568389*^9}, {
   3.872372367670828*^9, 3.872372548936543*^9}, {3.872372596708543*^9, 
   3.872372613179412*^9}, {3.872372645793027*^9, 3.872372712904305*^9}, {
   3.872372754259346*^9, 3.872372754548169*^9}, {3.8723727872493362`*^9, 
   3.872372846535713*^9}, {3.872372909571795*^9, 3.8723729097837*^9}, {
   3.8723732073881207`*^9, 3.872373230572736*^9}, 3.872373356580495*^9, {
   3.872374542426947*^9, 3.872374655126874*^9}, {3.872374688618071*^9, 
   3.872374740312788*^9}, {3.872374792206604*^9, 3.872374861215973*^9}, {
   3.8723758951048613`*^9, 3.8723759114899063`*^9}, {3.872375969636067*^9, 
   3.872376067687744*^9}, {3.872376268070588*^9, 3.872376275052758*^9}, {
   3.872377458906911*^9, 3.872377459445423*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"5c6c9304-457d-4870-b50e-c2f7f12a0e46"],

Cell[BoxData["14.655173688812605`"], "Output",
 CellChangeTimes->{{3.87237461303687*^9, 3.872374655688456*^9}, {
   3.87237468710983*^9, 3.872374740767164*^9}, {3.872374824065021*^9, 
   3.8723748616630793`*^9}, {3.8723759022016487`*^9, 3.87237591382479*^9}, {
   3.872375977425858*^9, 3.87237598808626*^9}, {3.872376019151208*^9, 
   3.872376068662896*^9}, {3.872376270048937*^9, 3.872376278428018*^9}, 
   3.872377460020274*^9},
 CellLabel->
  "Out[459]=",ExpressionUUID->"41234679-40bd-4c24-b287-9f40184f33a5"]
}, Open  ]],

Cell["\<\
from wolframclient.evaluation import WolframLanguageSession
from wolframclient.language import wl, wlexpr
session = WolframLanguageSession()\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{
  3.872374973404243*^9, {3.87237501117111*^9, 3.872375018578434*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"6a22db1a-3031-4276-b1de-c6fbc5d56260"],

Cell[CellGroupData[{

Cell["\<\
def PP2(x, d): return \
session.evaluate(wl.Evaluate(wlexpr(f'First[PPP2[{x}]-PPP2[{x-d}]]')))
print(PP2(100, 1))
print(type(PP2(100, 1)))\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.8723750204395523`*^9, 3.872375035376013*^9}, {
  3.872375098860875*^9, 3.872375133807487*^9}, {3.872375185371234*^9, 
  3.8723751949889097`*^9}, {3.872375236458639*^9, 3.872375254921411*^9}, {
  3.8723755860292473`*^9, 3.8723755963814087`*^9}, {3.8723756312071257`*^9, 
  3.872375683326335*^9}, {3.872375815751236*^9, 3.872375844645413*^9}, {
  3.872375890358766*^9, 3.8723759570199413`*^9}, {3.872376133754019*^9, 
  3.872376155274231*^9}, {3.8723763247087107`*^9, 3.87237632847917*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"81f94e21-5bfb-477b-b0de-298444f91706"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Times[-1, Global`PPP2[99]]\"\>"], "Print",
 CellChangeTimes->{{3.872375636864534*^9, 3.872375645050191*^9}, 
   3.87237567529431*^9, {3.872375818173811*^9, 3.872375830955967*^9}, {
   3.872375925967083*^9, 3.8723759575526943`*^9}, {3.8723761101643343`*^9, 
   3.872376155699603*^9}, 3.872376329051312*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[453]:=",ExpressionUUID->"4b11bb34-d558-4950-\
a223-9387e9816a16"],

Cell[BoxData["\<\"<class \
'wolframclient.language.expression.WLFunction'>\"\>"], "Print",
 CellChangeTimes->{{3.872375636864534*^9, 3.872375645050191*^9}, 
   3.87237567529431*^9, {3.872375818173811*^9, 3.872375830955967*^9}, {
   3.872375925967083*^9, 3.8723759575526943`*^9}, {3.8723761101643343`*^9, 
   3.872376155699603*^9}, 3.8723763290546303`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[453]:=",ExpressionUUID->"30470a32-7759-4547-\
a9a3-92d7ec98b857"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
def find(start, stop, d, f, esp=1):
\tm = (start + stop) / 2
\tv = f(m, d)
\tprint(v)
\tif abs(v) < esp:
\t\treturn [m, v]
\tif v < 0:
\t\treturn find(start, m, d, f)
\treturn find(m, stop, d, f)\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.8723751224309607`*^9, 3.8723751404765263`*^9}, {
  3.872375188079814*^9, 3.8723752285855007`*^9}, {3.872375261266656*^9, 
  3.872375503174568*^9}, {3.872375537666012*^9, 3.8723755396819067`*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"c98cf591-20dc-44c0-8eb8-41682ceda441"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"start\"", ",", "\"stop\"", ",", "\"d\"", ",", "\"f\"", 
                    ",", "\"esp\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox["\"find\"", "Program", LineBreakWithin -> False], 
                   ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"start\"", ",", "\"stop\"", ",", "\"d\"", ",", "\"f\"", 
                    ",", "\"esp\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox["\"find\"", "Program", LineBreakWithin -> False],
                     ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PythonFunction\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsModule: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsClass: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsMethod: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsCallable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ExternalSessionObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    7.5718000000000005`, 17.7334}, {7.0998, 17.7334}, {6.7168,
                     17.342399999999998`}, {6.7168, 16.8624}, {6.7168, 
                    16.3854}, {7.0998, 15.997399999999999`}, {
                    7.5718000000000005`, 15.997399999999999`}, {
                    8.043800000000001, 15.997399999999999`}, {8.4268, 
                    16.3854}, {8.4268, 16.8624}, {8.4268, 
                    17.342399999999998`}, {8.043800000000001, 17.7334}, {
                    7.5718000000000005`, 17.7334}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQvXD12hvxZbwODSxH+w2/izl86QsuUZnOAuezVHCr
aNT9se+5ncGQzyjl8EZ2+QsPve/2X6bfndzeKu/Qst2h6dHxD/ZfvSLbLMSU
4fz1U1I7kmVV4erNVtuFRxdqOCRs3P9mns0fe98WXv/1ItoOR9qWh58yYnP4
+AVowA4dh6z8D60nQwTg/EsTY/45/1KG87O1v02/K6zi8O7kYae1L3UdBLi3
Lqs8Lubw+zRQhEnPwdnuxc01v8QcGtQOtS2fbgDng2w5ctHQgc1E0MzGVsLB
+wS77exSIwfP/bWyFunyDs2BnnMbjhk5+CzjclP9quCwVMdZ5vUjI4cJhuW6
ivFKDqbvLVzdPxk5JIYEqS84qezgLyeW5fvZyGHaJp7CNacRfAOQAamqcD63
m2op0y01h3aQA54YOZx6ar/kvp0G3D4rZa/q5vVaEPMnQe0v1XG4bgIUWG4I
58P8A+M/mCO4dC+jJpy/M5vz54Llag73gLESNVkLEm/7VBwOWgItcNaA86PE
t19kiJOH80OmKfaVFkrC+ZbpLpn5BSIOx3JNGrY7KMH5UZf3PBaZKwfnw9IH
AO506oE=
                    "], {{12.401800000000001`, 4.1044}, {11.9298, 4.1044}, {
                    11.5458, 3.7164}, {11.5458, 3.2394}, {11.5458, 
                    2.7593999999999994`}, {11.9298, 2.369399999999999}, {
                    12.401800000000001`, 2.369399999999999}, {
                    12.872800000000002`, 2.369399999999999}, {13.2568, 
                    2.7593999999999994`}, {13.2568, 3.2394}, {13.2568, 
                    3.7164}, {12.872800000000002`, 4.1044}, {
                    12.401800000000001`, 4.1044}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/Uei+LrQJ2UHhUNty8NPfbBfaXrW2m+iEpyvdVrg
+C4LRYcC3899wSWf7M+tOn81LEfe4cBGvbzFjN/sb635FZPrKuPgUPST/+X2
n/bOdi9urvkl5sARP8NHtIfRAcY/smKJn4MwD5y/aIv5j0MpcnB+rknDdocm
RQepRxHi2y9KOeyeNoG/qkzZIQrIY4iTh/MPWip7VTtrwPkuv96+PmCpDedf
mhjzz3mXroPFtaO5JgxqcP6DOYJL9zJqwvldfU8+yV/ScWBbPMmKMdfA4eMX
r8i2HToOE/mrzFbXGcL5GnU9O7M1jRympHYkx8ZoO9z8AJIwcjBbbRceXajh
0Pzo+Izd34wc3p087LT2pQqcL7R070HxNCWH+TY6V2YB1SeEBKkv6JR3kKlJ
NAoVAKo/APTIb0kHkDMbphs6NLAc7Tf8LgZ3D4wPdu8vZTgfSJbrPlR2WNC5
4eHLqSIOz+yX3N/Xp+OQF1a7bluSiIPPMi431VIdeHjD+CLAYLzHxOQwi0N6
XpymlsMFzgylnIpf9lURK4AxrgGPT3B47lRzWNAU6Dm34ZP94ZRVQKerwtMD
enoBAPI7A7I=
                    "]}]}, {
                    FaceForm[{
                    RGBColor[0.20800000000000002`, 0.514, 0.6859999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    7.5718000000000005`, 17.6836}, {8.014800000000001, 
                    17.6836}, {8.3778, 17.3156}, {8.3778, 
                    16.862599999999997`}, {8.3778, 16.4116}, {
                    8.014800000000001, 16.046599999999998`}, {
                    7.5718000000000005`, 16.046599999999998`}, {7.1268, 
                    16.046599999999998`}, {6.7658000000000005`, 16.4116}, {
                    6.7658000000000005`, 16.862599999999997`}, {
                    6.7658000000000005`, 17.3156}, {7.1268, 17.6836}, {
                    7.5718000000000005`, 17.6836}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQnRgSpL7gpLLDYxHZk0//GzmYnbX2uxio5NBvWK6r
COQ7nU+7+vyVgsOa7tsZDO+NHKLEt19kiJN3EPMI+CNx2cgh6fBl7VRJCYd/
zr/evm4wchDg3rqs8riYQ2vU5T2PrxjC+XxzjBdtmW4A59fKWqS7vNR1uDQx
BqhVGYMPVKRpdUkHrh7Gb5l3dtX5UAE4v+gn/8vt69ng/DOHndZm3vttD+YH
aTt8OAkS+Gb/aUNA9qxyDQeec5KBt6Q/2N/XnbDgh6GqgwTQ2/ZL3tt77Ae6
QF0Zrv6Nhat7UaW8wxWXGx++eP223xet4PgxWcqBJ0Mpp6KK2aFlefgpoyNi
DgtXr70RX8YL5wcBbZmzSASDP2llU6DnXDk4/4fhs3WqKkoOb/V3q/N3Szq0
nQw5uGKJCjx8YfyDlspe1c4acL5XdbO+zzItOP+Z/ZL7+/p0HJR2/mn/MlsN
zgfybl9n1ITzYeEP4wNjvXPDQUOHa8+ztL9N13IARW/+QiO4fbD4haQPNYfO
DQ9fTv1k5NADUueoColvBmMH9PQDAFGHDrQ=
                    "]}]}, {
                    FaceForm[{
                    RGBColor[0.976, 0.8430000000000001, 0.353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{12.4014, 4.0552}, {
                    12.846400000000001`, 4.0552}, {13.2074, 3.6902}, {13.2074,
                     3.2392000000000003`}, {13.2074, 2.7862}, {
                    12.846400000000001`, 2.4182}, {12.4014, 2.4182}, {
                    11.958400000000001`, 2.4182}, {11.595400000000001`, 
                    2.7862}, {11.595400000000001`, 3.2392000000000003`}, {
                    11.595400000000001`, 3.6902}, {11.958400000000001`, 
                    4.0552}, {12.4014, 4.0552}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIQ3bszm/PnAl2HgsWMe1gv6TjA+Ec26uUtZtSE819t
X8/8nEfNISJ64/43ctoOlq7uRT/7lR06k2PvuDlrwPkvs7S/TY+Vh/MvpF19
nrVaCs6fH6d5WuC4mMNLkHk9inB+1r3Crr4UOTi/LerynsciPAh5hvxGlqNM
Dr8OpaxKuCLlcO96Y7HblF/2MPtesZgImtl8tde5MuuZbLqSw52tLTUXNr+1
/3363cnDTKoOCo4fk8/EvraHuRem3j4c6KEcLQel5HdRTna/7Ndlghyi4zCL
Q3penCaTA4wPcw+Mn7H5VfHWqSIO6sGsiyf9UsbgG2itFL5wRAyuHsYH+zvH
AM6PATlsjSGcbwwKeGUjhzV2QIfZSzn8sSo41zHJyKGuBxgRlfIOGUo5FVWs
xg62s0Pnr85VcljVFOg5l8HYoX15+CkjFlW4+l23uv6mlms4/OIH2uhs5BAg
J5bl+1kLYj/QPlh8w9wD4wMA37PnHw==
                    "]}]}}, {
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], AspectRatio -> 
                    Automatic, ImageSize -> {20., 20.}, 
                    PlotRange -> {{0., 20.}, {0., 20.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.10.7\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DefaultPythonSession\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.05], {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    7.5718000000000005`, 17.7334}, {7.0998, 17.7334}, {6.7168,
                     17.342399999999998`}, {6.7168, 16.8624}, {6.7168, 
                    16.3854}, {7.0998, 15.997399999999999`}, {
                    7.5718000000000005`, 15.997399999999999`}, {
                    8.043800000000001, 15.997399999999999`}, {8.4268, 
                    16.3854}, {8.4268, 16.8624}, {8.4268, 
                    17.342399999999998`}, {8.043800000000001, 17.7334}, {
                    7.5718000000000005`, 17.7334}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQvXD12hvxZbwODSxH+w2/izl86QsuUZnOAuezVHCr
aNT9se+5ncGQzyjl8EZ2+QsPve/2X6bfndzeKu/Qst2h6dHxD/ZfvSLbLMSU
4fz1U1I7kmVV4erNVtuFRxdqOCRs3P9mns0fe98WXv/1ItoOR9qWh58yYnP4
+AVowA4dh6z8D60nQwTg/EsTY/45/1KG87O1v02/K6zi8O7kYae1L3UdBLi3
Lqs8Lubw+zRQhEnPwdnuxc01v8QcGtQOtS2fbgDng2w5ctHQgc1E0MzGVsLB
+wS77exSIwfP/bWyFunyDs2BnnMbjhk5+CzjclP9quCwVMdZ5vUjI4cJhuW6
ivFKDqbvLVzdPxk5JIYEqS84qezgLyeW5fvZyGHaJp7CNacRfAOQAamqcD63
m2op0y01h3aQA54YOZx6ar/kvp0G3D4rZa/q5vVaEPMnQe0v1XG4bgIUWG4I
58P8A+M/mCO4dC+jJpy/M5vz54Llag73gLESNVkLEm/7VBwOWgItcNaA86PE
t19kiJOH80OmKfaVFkrC+ZbpLpn5BSIOx3JNGrY7KMH5UZf3PBaZKwfnw9IH
AO506oE=
                    "], {{12.401800000000001`, 4.1044}, {11.9298, 4.1044}, {
                    11.5458, 3.7164}, {11.5458, 3.2394}, {11.5458, 
                    2.7593999999999994`}, {11.9298, 2.369399999999999}, {
                    12.401800000000001`, 2.369399999999999}, {
                    12.872800000000002`, 2.369399999999999}, {13.2568, 
                    2.7593999999999994`}, {13.2568, 3.2394}, {13.2568, 
                    3.7164}, {12.872800000000002`, 4.1044}, {
                    12.401800000000001`, 4.1044}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/Uei+LrQJ2UHhUNty8NPfbBfaXrW2m+iEpyvdVrg
+C4LRYcC3899wSWf7M+tOn81LEfe4cBGvbzFjN/sb635FZPrKuPgUPST/+X2
n/bOdi9urvkl5sARP8NHtIfRAcY/smKJn4MwD5y/aIv5j0MpcnB+rknDdocm
RQepRxHi2y9KOeyeNoG/qkzZIQrIY4iTh/MPWip7VTtrwPkuv96+PmCpDedf
mhjzz3mXroPFtaO5JgxqcP6DOYJL9zJqwvldfU8+yV/ScWBbPMmKMdfA4eMX
r8i2HToOE/mrzFbXGcL5GnU9O7M1jRympHYkx8ZoO9z8AJIwcjBbbRceXajh
0Pzo+Izd34wc3p087LT2pQqcL7R070HxNCWH+TY6V2YB1SeEBKkv6JR3kKlJ
NAoVAKo/APTIb0kHkDMbphs6NLAc7Tf8LgZ3D4wPdu8vZTgfSJbrPlR2WNC5
4eHLqSIOz+yX3N/Xp+OQF1a7bluSiIPPMi431VIdeHjD+CLAYLzHxOQwi0N6
XpymlsMFzgylnIpf9lURK4AxrgGPT3B47lRzWNAU6Dm34ZP94ZRVQKerwtMD
enoBAPI7A7I=
                    "]}]}, {
                    FaceForm[{
                    RGBColor[0.20800000000000002`, 0.514, 0.6859999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    7.5718000000000005`, 17.6836}, {8.014800000000001, 
                    17.6836}, {8.3778, 17.3156}, {8.3778, 
                    16.862599999999997`}, {8.3778, 16.4116}, {
                    8.014800000000001, 16.046599999999998`}, {
                    7.5718000000000005`, 16.046599999999998`}, {7.1268, 
                    16.046599999999998`}, {6.7658000000000005`, 16.4116}, {
                    6.7658000000000005`, 16.862599999999997`}, {
                    6.7658000000000005`, 17.3156}, {7.1268, 17.6836}, {
                    7.5718000000000005`, 17.6836}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQnRgSpL7gpLLDYxHZk0//GzmYnbX2uxio5NBvWK6r
COQ7nU+7+vyVgsOa7tsZDO+NHKLEt19kiJN3EPMI+CNx2cgh6fBl7VRJCYd/
zr/evm4wchDg3rqs8riYQ2vU5T2PrxjC+XxzjBdtmW4A59fKWqS7vNR1uDQx
BqhVGYMPVKRpdUkHrh7Gb5l3dtX5UAE4v+gn/8vt69ng/DOHndZm3vttD+YH
aTt8OAkS+Gb/aUNA9qxyDQeec5KBt6Q/2N/XnbDgh6GqgwTQ2/ZL3tt77Ae6
QF0Zrv6Nhat7UaW8wxWXGx++eP223xet4PgxWcqBJ0Mpp6KK2aFlefgpoyNi
DgtXr70RX8YL5wcBbZmzSASDP2llU6DnXDk4/4fhs3WqKkoOb/V3q/N3Szq0
nQw5uGKJCjx8YfyDlspe1c4acL5XdbO+zzItOP+Z/ZL7+/p0HJR2/mn/MlsN
zgfybl9n1ITzYeEP4wNjvXPDQUOHa8+ztL9N13IARW/+QiO4fbD4haQPNYfO
DQ9fTv1k5NADUueoColvBmMH9PQDAFGHDrQ=
                    "]}]}, {
                    FaceForm[{
                    RGBColor[0.976, 0.8430000000000001, 0.353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{12.4014, 4.0552}, {
                    12.846400000000001`, 4.0552}, {13.2074, 3.6902}, {13.2074,
                     3.2392000000000003`}, {13.2074, 2.7862}, {
                    12.846400000000001`, 2.4182}, {12.4014, 2.4182}, {
                    11.958400000000001`, 2.4182}, {11.595400000000001`, 
                    2.7862}, {11.595400000000001`, 3.2392000000000003`}, {
                    11.595400000000001`, 3.6902}, {11.958400000000001`, 
                    4.0552}, {12.4014, 4.0552}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIQ3bszm/PnAl2HgsWMe1gv6TjA+Ec26uUtZtSE819t
X8/8nEfNISJ64/43ctoOlq7uRT/7lR06k2PvuDlrwPkvs7S/TY+Vh/MvpF19
nrVaCs6fH6d5WuC4mMNLkHk9inB+1r3Crr4UOTi/LerynsciPAh5hvxGlqNM
Dr8OpaxKuCLlcO96Y7HblF/2MPtesZgImtl8tde5MuuZbLqSw52tLTUXNr+1
/3363cnDTKoOCo4fk8/EvraHuRem3j4c6KEcLQel5HdRTna/7Ndlghyi4zCL
Q3penCaTA4wPcw+Mn7H5VfHWqSIO6sGsiyf9UsbgG2itFL5wRAyuHsYH+zvH
AM6PATlsjSGcbwwKeGUjhzV2QIfZSzn8sSo41zHJyKGuBxgRlfIOGUo5FVWs
xg62s0Pnr85VcljVFOg5l8HYoX15+CkjFlW4+l23uv6mlms4/OIH2uhs5BAg
J5bl+1kLYj/QPlh8w9wD4wMA37PnHw==
                    "]}]}}, {
                    ImageSize -> Dynamic[{
                    Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}], AspectRatio -> 
                    Automatic, ImageSize -> {20., 20.}, 
                    PlotRange -> {{0., 20.}, {0., 20.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.10.7\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"DefaultPythonSession\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18", "Exists"]], 
                    ExternalSessionObject[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"]["Active"], False],
                     StandardForm], TrackedSymbols :> {
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"013bd3ac-def5-48fa-bcf7-eefa3f6a2f18\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.10\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18001", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.10\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18001", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12285", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"chiro\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"/usr/bin/python3.10\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"35.074048`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Sun 25 Sep 2022 20:15:41\"", 
                    StyleBox[
                    
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "8", NumberMarks -> False, StripOnInput -> False]}], 
                    FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2022", ",", "9", ",", "25", ",", "20", ",", "15",
                     ",", "41.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "8.`"}], "]"}]}, "DateObject", 
                    Editable -> False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0500000000000000028`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.3900000000000000133`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"15", "37", "38.`5.", 
                    RowBox[{"\[ThinSpace]", "\"h\""}], 
                    RowBox[{"\[ThinSpace]", "\"min\""}], 
                    RowBox[{"\[ThinSpace]", "\"s\""}], 
                    "hours,minutes,seconds", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", 
                    "\"Seconds\""}], "}"}]}, "QuantityMixedUnit3"], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    ProcessObject[<|"ManagedProcess" -> True, "UID" -> 8, 
                    "PID" -> 18001, "PPID" -> 12285, "Program" -> 
                    "python3.10", "Path" -> "/usr/bin/python3.10", "User" -> 
                    "chiro", "StartTime" -> 
                    DateObject[{2022, 9, 25, 20, 15, 41.}, "Instant", 
                    "Gregorian", 8.]|>], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["46497", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"02fbd7cc-a1f6-4e0c-9086-9a9518402970\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["46497", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"02fbd7cc-a1f6-4e0c-9086-9a9518402970\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"tcp://127.0.0.1:46497\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject["02fbd7cc-a1f6-4e0c-9086-9a9518402970"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18", "Exists"]], 
                    ExternalSessionObject[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"][
                    "EvaluationCount"], None], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ExternalSessionObject[
                   "013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[<|
   "System" -> "Python", "Type" -> "PythonFunction", 
    "Arguments" -> {"start", "stop", "d", "f", "esp"}, "Command" -> "find", 
    "IsModule" -> False, "IsClass" -> False, "IsFunction" -> True, "IsMethod" -> 
    False, "IsCallable" -> True, "Session" -> 
    ExternalSessionObject["013bd3ac-def5-48fa-bcf7-eefa3f6a2f18"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8723751261021137`*^9, 3.872375141072056*^9}, {
   3.872375188582292*^9, 3.8723752181748457`*^9}, 3.872375505467003*^9, 
   3.872375540489504*^9, 3.8723755993953133`*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"16279f05-5aaf-444f-8190-0ec3985817cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["find(0, 100000, 1, PP2)", "ExternalLanguage",
 CellEvaluationLanguage->"Python",
 CellChangeTimes->{{3.87237550809437*^9, 3.872375530656597*^9}},
 NumberMarks->False,
 CellLabel->
  "In[350]:=",ExpressionUUID->"33a29bdb-dac5-4873-8324-98cfa50260f4"],

Cell[CellGroupData[{

Cell[BoxData["\<\"P2[50000.0]-P2[49999.0]\"\>"], "Print",
 CellChangeTimes->{3.872375543541926*^9, 3.872375600821241*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[350]:=",ExpressionUUID->"a87e8531-b062-4ec4-\
94fd-957327ca2c02"],

Cell[BoxData["\<\"Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]\"\>"], "Print",
 CellChangeTimes->{3.872375543541926*^9, 3.872375600825798*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[350]:=",ExpressionUUID->"a4a747a3-70b1-4cb3-\
a384-3eaa98657510"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"bad operand type for abs(): 'WLFunction'\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PythonError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"bad operand type for abs(): 'WLFunction'\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PythonError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"FailureCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"TypeError\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Traceback\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    
                    TemplateBox[{
                    "\"TypeError\"", "\" \"", 
                    "\"bad operand type for abs(): 'WLFunction'\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    
                    TemplateBox[{
                    "\"TypeError\"", "\" \"", 
                    "\"bad operand type for abs(): 'WLFunction'\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py\"", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"safe_wl_execute\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py\"", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"safe_wl_execute\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{"\"  16.  \""}, {"\"  17.  \""}, {
                    "\"  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):\""}, {"\"  19.  \""}, {
                    "\"  20.      __traceback_hidden_variables__ = True\""}, {
                    "\"  21.  \""}, {"\"  22.      try:\""}, {
                    ItemBox[
                    "\"  23.          return export(function(*args, **opts), \
**export_opts)\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
                    False]}, {
                    "\"  24.      except Exception as export_exception:\""}, {
                    "\"  25.          try:\""}, {
                    "\"  26.              try:\""}, {"\"  27.  \""}, {
                    "\"  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running \
another\""}, {
                    "\"  29.                  # try / except to return errors \
that are happening during class serialization\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless"], " in ", "safe_wl_execute"}], 
                    Column[{
                    
                    Column[{"  16.  ", "  17.  ", 
                    "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                    "  20.      __traceback_hidden_variables__ = True", 
                    "  21.  ", "  22.      try:", 
                    Item[
                    "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                    "  24.      except Exception as export_exception:", 
                    "  25.          try:", "  26.              try:", 
                    "  27.  ", 
                    "  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running another", 
                    "  29.                  # try / except to return errors \
that are happening during class serialization"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"handle_message\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"handle_message\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{"\" 130.  \""}, {"\" 131.  \""}, {
                    "\" 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):\""}, {"\" 133.  \""}, {
                    "\" 134.      __traceback_hidden_variables__ = True\""}, {
                    "\" 135.  \""}, {
                    "\" 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)\""}, {
                    ItemBox[
                    "\" 137.      result = evaluate_message(**message)\"", 
                    Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
                    False]}, {"\" 138.  \""}, {
                    "\" 139.      sys.stdout.flush()\""}, {
                    "\" 140.      return result\""}, {"\" 141.  \""}, {
                    "\" 142.  \""}, {
                    "\" 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "handle_message"}], 
                    Column[{
                    
                    Column[{" 130.  ", " 131.  ", 
                    " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                    " 134.      __traceback_hidden_variables__ = True", 
                    " 135.  ", 
                    " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                    Item[
                    " 137.      result = evaluate_message(**message)", 
                    Background -> LightYellow], " 138.  ", 
                    " 139.      sys.stdout.flush()", 
                    " 140.      return result", " 141.  ", " 142.  ", 
                    " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"evaluate_message\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"evaluate_message\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{
                    "\" 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):\""}, {"\" 112.  \""}, {
                    "\" 113.      __traceback_hidden_variables__ = True\""}, {
                    "\" 114.  \""}, {"\" 115.      result = None\""}, {
                    "\" 116.  \""}, {
                    "\" 117.      if isinstance(input, \
six.string_types):\""}, {
                    ItemBox[
                    "\" 118.          result = execute_from_string(input, \
**opts)\"", Background -> RGBColor[1, 1, 0.85], StripOnInput -> False]}, {
                    "\" 119.  \""}, {
                    "\" 120.      if isinstance(args, (list, tuple)):\""}, {
                    "\" 121.          # then we have a function call to \
do\""}, {"\" 122.          # first get the function object we need to \
call\""}, {"\" 123.          result = result(*args)\""}, {"\" 124.  \""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "evaluate_message"}], 
                    
                    Column[{
                    
                    Column[{
                    " 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                    " 113.      __traceback_hidden_variables__ = True", 
                    " 114.  ", " 115.      result = None", " 116.  ", 
                    " 117.      if isinstance(input, six.string_types):", 
                    Item[
                    " 118.          result = execute_from_string(input, \
**opts)", Background -> LightYellow], " 119.  ", 
                    " 120.      if isinstance(args, (list, tuple)):", 
                    " 121.          # then we have a function call to do", 
                    " 122.          # first get the function object we need \
to call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"execute_from_string\""}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    TemplateBox[{
                    ButtonBox[
                    StyleBox[
                    "\"/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py\"", 
                    
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier", 
                    StripOnInput -> False], ButtonFunction :> If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless", Evaluator -> Automatic, Method -> 
                    "Preemptive"], "\" in \"", "\"execute_from_string\""}, 
                    "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    
                    GridBox[{{
                    "\"  84.      if isinstance(last_expr, ast.Expr):\""}, {
                    "\"  85.          result = expressions.pop(-1)\""}, {
                    "\"  86.  \""}, {"\"  87.      if expressions:\""}, {
                    "\"  88.          exec(compile(Module(expressions), \
\\\"\\\", \\\"exec\\\"), env)\""}, {"\"  89.  \""}, {
                    "\"  90.      if result:\""}, {
                    ItemBox[
                    "\"  91.          return \
eval(compile(ast.Expression(result.value), \\\"\\\", \\\"eval\\\"), env)\"", 
                    Background -> RGBColor[1, 1, 0.85], StripOnInput -> 
                    False]}, {"\"  92.  \""}, {
                    "\"  93.      elif isinstance(last_expr, \
(ast.FunctionDef, ast.ClassDef)):\""}, {
                    "\"  94.          return env[last_expr.name]\""}, {
                    "\"  95.  \""}, {"\"  96.  \""}, {
                    "\"  97.  class SocketWriter:\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{"\"Key\"", "\"Value\""}, {"\"code\"", 
                    "\"find(0, 100000, 1, PP2)\""}, {"\"globals\"", 
                    "\"{}\""}, {"\"opts\"", "\"{'constants': {}}\""}, {
                    "\"result\"", 
                    "\"<ast.Expr object at 0x7f4da3fc6cb0>\""}, {
                    "\"expressions\"", "\"[]\""}, {"\"last_expr\"", 
                    "\"<ast.Expr object at 0x7f4da3fc6cb0>\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Null}}, 
                    "Rows" -> {
                    GrayLevel[0.85]}}, 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {"Columns" -> {{
                    Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"code", 
                    "find(0, 100000, 1, PP2)"}, {"globals", "{}"}, {
                    "opts", "{'constants': {}}"}, {"result", 
                    "<ast.Expr object at 0x7f4da3fc6cb0>"}, {
                    "expressions", "[]"}, {"last_expr", 
                    "<ast.Expr object at 0x7f4da3fc6cb0>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}, False]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", 
                    "execute_from_string"}], 
                    Column[{
                    
                    Column[{"  84.      if isinstance(last_expr, ast.Expr):", 
                    "  85.          result = expressions.pop(-1)", "  86.  ", 
                    "  87.      if expressions:", 
                    "  88.          exec(compile(Module(expressions), \"\", \
\"exec\"), env)", "  89.  ", "  90.      if result:", 
                    Item[
                    "  91.          return \
eval(compile(ast.Expression(result.value), \"\", \"eval\"), env)", Background -> 
                    LightYellow], "  92.  ", 
                    "  93.      elif isinstance(last_expr, (ast.FunctionDef, \
ast.ClassDef)):", "  94.          return env[last_expr.name]", "  95.  ", 
                    "  96.  ", "  97.  class SocketWriter:"}, 
                    Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"code", 
                    "find(0, 100000, 1, PP2)"}, {"globals", "{}"}, {
                    "opts", "{'constants': {}}"}, {
                    "result", "<ast.Expr object at 0x7f4da3fc6cb0>"}, {
                    "expressions", "[]"}, {"last_expr", 
                    "<ast.Expr object at 0x7f4da3fc6cb0>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, False]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"<module>\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"<module>\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    "\"   1.  find(0, 100000, 1, PP2)\"", Background -> 
                    RGBColor[1, 1, 0.85], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{"\"Key\"", 
                    "\"Value\""}, {"\"WolframLanguageSession\"", 
                    "\"<class \
'wolframclient.evaluation.kernel.localsession.WolframLanguageSession'>\""}, {
                    "\"wl\"", 
                    "\"<unprintable obj: __str__ returned non-string (type \
NoneType)>\""}, {"\"wlexpr\"", 
                    "\"<class \
'wolframclient.language.expression.WLInputExpression'>\""}, {"\"session\"", 
                    "\"<WolframLanguageSession: \
<WolframKernelController[wolfram-kernel-1 \:2705], \
\\\"/usr/local/Wolfram/Mathematica/13.1/Executables/WolframKernel\\\", \
pid:18015, kernel sockets: (in:tcp://127.0.0.1:40851, \
out:tcp://127.0.0.1:37277)>>\""}, {"\"P2\"", 
                    "\"<function P2 at 0x7f4da2a33e20>\""}, {"\"PP2\"", 
                    "\"<function PP2 at 0x7f4da2a60790>\""}, {"\"find\"", 
                    "\"<function find at 0x7f4da2a60820>\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Null}}, 
                    "Rows" -> {
                    GrayLevel[0.85]}}, 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {"Columns" -> {{
                    Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"WolframLanguageSession", 
                    "<class \
'wolframclient.evaluation.kernel.localsession.WolframLanguageSession'>"}, {
                    "wl", "<unprintable obj: __str__ returned non-string \
(type NoneType)>"}, {"wlexpr", 
                    "<class \
'wolframclient.language.expression.WLInputExpression'>"}, {
                    "session", 
                    "<WolframLanguageSession: \
<WolframKernelController[wolfram-kernel-1 \:2705], \
\"/usr/local/Wolfram/Mathematica/13.1/Executables/WolframKernel\", pid:18015, \
kernel sockets: (in:tcp://127.0.0.1:40851, out:tcp://127.0.0.1:37277)>>"}, {
                    "P2", "<function P2 at 0x7f4da2a33e20>"}, {
                    "PP2", "<function PP2 at 0x7f4da2a60790>"}, {
                    "find", "<function find at 0x7f4da2a60820>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}, False]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"<module>", 
                    Column[{
                    Column[{
                    Item[
                    "   1.  find(0, 100000, 1, PP2)", Background -> 
                    LightYellow]}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"WolframLanguageSession", 
                    "<class \
'wolframclient.evaluation.kernel.localsession.WolframLanguageSession'>"}, {
                    "wl", "<unprintable obj: __str__ returned non-string \
(type NoneType)>"}, {"wlexpr", 
                    "<class \
'wolframclient.language.expression.WLInputExpression'>"}, {
                    "session", 
                    
                    "<WolframLanguageSession: \
<WolframKernelController[wolfram-kernel-1 \:2705], \
\"/usr/local/Wolfram/Mathematica/13.1/Executables/WolframKernel\", pid:18015, \
kernel sockets: (in:tcp://127.0.0.1:40851, out:tcp://127.0.0.1:37277)>>"}, {
                    "P2", "<function P2 at 0x7f4da2a33e20>"}, {
                    "PP2", "<function PP2 at 0x7f4da2a60790>"}, {
                    "find", "<function find at 0x7f4da2a60820>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, True]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"find\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"find\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    "\"   5.  find(0, 100000, 1, PP2)\"", Background -> 
                    RGBColor[1, 1, 0.85], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}}, DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"Local variables\""}, {"", 
                    PaneBox[
                    TagBox[
                    
                    GridBox[{{"\"Key\"", "\"Value\""}, {"\"start\"", 
                    "\"0\""}, {"\"stop\"", "\"100000\""}, {"\"d\"", 
                    "\"1\""}, {"\"f\"", 
                    "\"<function PP2 at 0x7f4da2a60790>\""}, {"\"esp\"", 
                    "\"1\""}, {"\"m\"", "\"50000.0\""}, {"\"v\"", 
                    "\"Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {"Columns" -> {{
                    Null}}, "Rows" -> {
                    GrayLevel[0.85]}}, 
                    GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> 
                    GrayLevel[0.85]}}, GridBoxItemSize -> {"Columns" -> {{
                    Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"start", "0"}, {
                    "stop", "100000"}, {"d", "1"}, {"f", 
                    "<function PP2 at 0x7f4da2a60790>"}, {"esp", "1"}, {
                    "m", "50000.0"}, {"v", 
                    "Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]"}}, Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}, False]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"find", 
                    Column[{
                    Column[{
                    Item[
                    "   5.  find(0, 100000, 1, PP2)", Background -> 
                    LightYellow]}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"start", "0"}, {
                    "stop", "100000"}, {"d", "1"}, {
                    "f", "<function PP2 at 0x7f4da2a60790>"}, {"esp", "1"}, {
                    "m", "50000.0"}, {"v", 
                    "Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]"}}, Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, True]], DynamicModuleValues -> 
                    Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], FontFamily -> "Courier", StripOnInput -> 
                    False], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    
                    Row[{"TypeError", " ", 
                    "bad operand type for abs(): 'WLFunction'"}], 
                    Style[
                    Column[{
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/language/decorators.py"]], 
                    Appearance -> "Frameless"], " in ", "safe_wl_execute"}], 
                    Column[{
                    
                    Column[{"  16.  ", "  17.  ", 
                    "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                    "  20.      __traceback_hidden_variables__ = True", 
                    "  21.  ", "  22.      try:", 
                    Item[
                    "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                    "  24.      except Exception as export_exception:", 
                    "  25.          try:", "  26.              try:", 
                    "  27.  ", 
                    "  28.                  # The user can provide an \
exception class, and it can be broken, in which case we are running another", 
                    "  29.                  # try / except to return errors \
that are happening during class serialization"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "handle_message"}], 
                    Column[{
                    
                    Column[{" 130.  ", " 131.  ", 
                    " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                    " 134.      __traceback_hidden_variables__ = True", 
                    " 135.  ", 
                    " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                    Item[
                    " 137.      result = evaluate_message(**message)", 
                    Background -> LightYellow], " 138.  ", 
                    " 139.      sys.stdout.flush()", 
                    " 140.      return result", " 141.  ", " 142.  ", 
                    " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", "evaluate_message"}], 
                    
                    Column[{
                    
                    Column[{
                    " 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                    " 113.      __traceback_hidden_variables__ = True", 
                    " 114.  ", " 115.      result = None", " 116.  ", 
                    " 117.      if isinstance(input, six.string_types):", 
                    Item[
                    " 118.          result = execute_from_string(input, \
**opts)", Background -> LightYellow], " 119.  ", 
                    " 120.      if isinstance(args, (list, tuple)):", 
                    " 121.          # then we have a function call to do", 
                    " 122.          # first get the function object we need \
to call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
                    OpenerView[{
                    Row[{
                    Button[
                    Style[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                    RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
                    
                    If[
                    FileExistsQ[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                    SystemOpen[
                    "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/\
Components/WolframClientForPython/wolframclient/utils/externalevaluate.py"]], 
                    Appearance -> "Frameless"], " in ", 
                    "execute_from_string"}], 
                    Column[{
                    
                    Column[{"  84.      if isinstance(last_expr, ast.Expr):", 
                    "  85.          result = expressions.pop(-1)", "  86.  ", 
                    "  87.      if expressions:", 
                    "  88.          exec(compile(Module(expressions), \"\", \
\"exec\"), env)", "  89.  ", "  90.      if result:", 
                    Item[
                    "  91.          return \
eval(compile(ast.Expression(result.value), \"\", \"eval\"), env)", Background -> 
                    LightYellow], "  92.  ", 
                    "  93.      elif isinstance(last_expr, (ast.FunctionDef, \
ast.ClassDef)):", "  94.          return env[last_expr.name]", "  95.  ", 
                    "  96.  ", "  97.  class SocketWriter:"}, 
                    Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {
                    "code", "find(0, 100000, 1, PP2)"}, {"globals", "{}"}, {
                    "opts", "{'constants': {}}"}, {
                    "result", "<ast.Expr object at 0x7f4da3fc6cb0>"}, {
                    "expressions", "[]"}, {
                    "last_expr", "<ast.Expr object at 0x7f4da3fc6cb0>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, False], 
                    OpenerView[{"<module>", 
                    Column[{
                    Column[{
                    Item[
                    "   1.  find(0, 100000, 1, PP2)", Background -> 
                    LightYellow]}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {
                    "WolframLanguageSession", 
                    "<class \
'wolframclient.evaluation.kernel.localsession.WolframLanguageSession'>"}, {
                    "wl", "<unprintable obj: __str__ returned non-string \
(type NoneType)>"}, {"wlexpr", 
                    "<class \
'wolframclient.language.expression.WLInputExpression'>"}, {
                    "session", 
                    "<WolframLanguageSession: \
<WolframKernelController[wolfram-kernel-1 \:2705], \
\"/usr/local/Wolfram/Mathematica/13.1/Executables/WolframKernel\", pid:18015, \
kernel sockets: (in:tcp://127.0.0.1:40851, out:tcp://127.0.0.1:37277)>>"}, {
                    "P2", "<function P2 at 0x7f4da2a33e20>"}, {
                    "PP2", "<function PP2 at 0x7f4da2a60790>"}, {
                    "find", "<function find at 0x7f4da2a60820>"}}, 
                    Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, True], 
                    OpenerView[{"find", 
                    Column[{
                    Column[{
                    Item[
                    "   5.  find(0, 100000, 1, PP2)", Background -> 
                    LightYellow]}, Background -> {{
                    GrayLevel[0.95], 
                    GrayLevel[1]}}, Frame -> LightGray], 
                    OpenerView[{"Local variables", 
                    
                    Grid[{{"Key", "Value"}, {"start", "0"}, {
                    "stop", "100000"}, {"d", "1"}, {
                    "f", "<function PP2 at 0x7f4da2a60790>"}, {"esp", "1"}, {
                    "m", "50000.0"}, {
                    "v", "Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]"}}, Background -> {Null, {LightGray}}, Alignment -> Left, 
                    Frame -> LightGray]}]}]}, True]}], FontFamily -> 
                    "Courier"]}, True]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ], HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "PythonError", <|
   "MessageTemplate" :> "bad operand type for abs(): 'WLFunction'", 
    "MessageParameters" :> <||>, "FailureCode" :> "TypeError", "Traceback" :> 
    OpenerView[{
       Row[{"TypeError", " ", "bad operand type for abs(): 'WLFunction'"}], 
       Style[
        Column[{
          OpenerView[{
            Row[{
              Button[
               Style[
               "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/language/decorators.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/language/decorators.py"], 
                SystemOpen[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/language/decorators.py"]], Appearance -> 
               "Frameless"], " in ", "safe_wl_execute"}], 
            Column[{
              
              Column[{"  16.  ", "  17.  ", 
                "  18.  def safe_wl_execute(function, args=(), opts={}, \
export_opts={}, exception_class=None):", "  19.  ", 
                "  20.      __traceback_hidden_variables__ = True", "  21.  ",
                 "  22.      try:", 
                Item[
                "  23.          return export(function(*args, **opts), \
**export_opts)", Background -> LightYellow], 
                "  24.      except Exception as export_exception:", 
                "  25.          try:", "  26.              try:", "  27.  ", 
                "  28.                  # The user can provide an exception \
class, and it can be broken, in which case we are running another", 
                "  29.                  # try / except to return errors that \
are happening during class serialization"}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"]], Appearance -> 
               "Frameless"], " in ", "handle_message"}], 
            Column[{
              
              Column[{" 130.  ", " 131.  ", 
                " 132.  def handle_message(socket, \
evaluate_message=evaluate_message, consumer=None):", " 133.  ", 
                " 134.      __traceback_hidden_variables__ = True", " 135.  ",
                 " 136.      message = \
binary_deserialize(socket.recv(copy=False).buffer, consumer=consumer)", 
                Item[
                " 137.      result = evaluate_message(**message)", Background -> 
                 LightYellow], " 138.  ", " 139.      sys.stdout.flush()", 
                " 140.      return result", " 141.  ", " 142.  ", 
                " 143.  def start_zmq_instance(port=None, \
write_to_stdout=True, **opts):"}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"]], Appearance -> 
               "Frameless"], " in ", "evaluate_message"}], 
            Column[{
              
              Column[{" 111.  def evaluate_message(input=None, \
return_type=None, args=None, **opts):", " 112.  ", 
                " 113.      __traceback_hidden_variables__ = True", " 114.  ",
                 " 115.      result = None", " 116.  ", 
                " 117.      if isinstance(input, six.string_types):", 
                Item[
                " 118.          result = execute_from_string(input, **opts)", 
                 Background -> LightYellow], " 119.  ", 
                " 120.      if isinstance(args, (list, tuple)):", 
                " 121.          # then we have a function call to do", 
                " 122.          # first get the function object we need to \
call", " 123.          result = result(*args)", " 124.  "}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray]}]}, False], 
          OpenerView[{
            Row[{
              Button[
               Style[
               "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py", 
                RGBColor[0.25, 0.48, 1], Small, FontFamily -> "Courier"], 
               If[
                FileExistsQ[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"], 
                SystemOpen[
                "/usr/local/Wolfram/Mathematica/13.1/SystemFiles/Components/\
WolframClientForPython/wolframclient/utils/externalevaluate.py"]], Appearance -> 
               "Frameless"], " in ", "execute_from_string"}], 
            Column[{
              
              Column[{"  84.      if isinstance(last_expr, ast.Expr):", 
                "  85.          result = expressions.pop(-1)", "  86.  ", 
                "  87.      if expressions:", 
                "  88.          exec(compile(Module(expressions), \"\", \
\"exec\"), env)", "  89.  ", "  90.      if result:", 
                Item[
                "  91.          return \
eval(compile(ast.Expression(result.value), \"\", \"eval\"), env)", Background -> 
                 LightYellow], "  92.  ", 
                "  93.      elif isinstance(last_expr, (ast.FunctionDef, \
ast.ClassDef)):", "  94.          return env[last_expr.name]", "  95.  ", 
                "  96.  ", "  97.  class SocketWriter:"}, Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray], 
              OpenerView[{"Local variables", 
                
                Grid[{{"Key", "Value"}, {"code", "find(0, 100000, 1, PP2)"}, {
                  "globals", "{}"}, {"opts", "{'constants': {}}"}, {
                  "result", "<ast.Expr object at 0x7f4da3fc6cb0>"}, {
                  "expressions", "[]"}, {
                  "last_expr", "<ast.Expr object at 0x7f4da3fc6cb0>"}}, 
                 Background -> {Null, {LightGray}}, Alignment -> Left, Frame -> 
                 LightGray]}]}]}, False], 
          OpenerView[{"<module>", 
            Column[{
              Column[{
                Item[
                "   1.  find(0, 100000, 1, PP2)", Background -> LightYellow]},
                Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray], 
              OpenerView[{"Local variables", 
                
                Grid[{{"Key", "Value"}, {
                  "WolframLanguageSession", 
                   "<class \
'wolframclient.evaluation.kernel.localsession.WolframLanguageSession'>"}, {
                  "wl", "<unprintable obj: __str__ returned non-string (type \
NoneType)>"}, {"wlexpr", 
                   "<class \
'wolframclient.language.expression.WLInputExpression'>"}, {
                  "session", 
                   "<WolframLanguageSession: \
<WolframKernelController[wolfram-kernel-1 \:2705], \
\"/usr/local/Wolfram/Mathematica/13.1/Executables/WolframKernel\", pid:18015, \
kernel sockets: (in:tcp://127.0.0.1:40851, out:tcp://127.0.0.1:37277)>>"}, {
                  "P2", "<function P2 at 0x7f4da2a33e20>"}, {
                  "PP2", "<function PP2 at 0x7f4da2a60790>"}, {
                  "find", "<function find at 0x7f4da2a60820>"}}, 
                 Background -> {Null, {LightGray}}, Alignment -> Left, Frame -> 
                 LightGray]}]}]}, True], 
          OpenerView[{"find", 
            Column[{
              Column[{
                Item[
                "   5.  find(0, 100000, 1, PP2)", Background -> LightYellow]},
                Background -> {{
                  GrayLevel[0.95], 
                  GrayLevel[1]}}, Frame -> LightGray], 
              OpenerView[{"Local variables", 
                
                Grid[{{"Key", "Value"}, {"start", "0"}, {"stop", "100000"}, {
                  "d", "1"}, {"f", "<function PP2 at 0x7f4da2a60790>"}, {
                  "esp", "1"}, {"m", "50000.0"}, {
                  "v", "Plus[Times[-1, Global`P2[49999.0]], \
Global`P2[50000.0]]"}}, Background -> {Null, {LightGray}}, Alignment -> Left, 
                 Frame -> LightGray]}]}]}, True]}], FontFamily -> "Courier"]},
       True]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.872375207788781*^9, {3.8723755313408823`*^9, 3.8723755435608063`*^9}, 
   3.872375600838737*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"f5015f0e-5705-4963-a802-9a7942820afa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87237746289826*^9, 3.872377477176062*^9}, {
  3.8723811215000887`*^9, 3.872381122257337*^9}},
 CellLabel->
  "In[566]:=",ExpressionUUID->"7bf65818-e4fb-42d7-9da2-05b917fbb128"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdxTlKBGAUBOHGyHACAwMDFREREfdd57nMjPsy7qlo7BX6aP+RPIKKIHQV
FN/U2+fwY0TS+8+//vXVTVXpKOzAMTgOJ+AknIYzcBbOwXm4ABfhElyGK3AV
rsF1uAE34RbchjtwF+7BfXgAu7BSQx2mhjpKDXWcGuokNVQvNVQ/NdQgNdRp
aqiz1FDnqaEuUkNdpoa6Sg11nRrqJjXUbVrQsEHdpQUNG9QwLWjYoO7TgoYN
6iEtaNigHtOChg3qKS1o2KCe04KGDeolLWjYoF7//QZTcpVC
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872381122786804*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"96d6614f-ec3e-44c9-b455-b20c2ff73f86"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.872381124037363*^9, 
  3.872381126486045*^9}},ExpressionUUID->"72b856b3-20ea-4b27-81a2-\
77d3d0214fd4"],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{{3.872381129178376*^9, 
  3.872381131051202*^9}},ExpressionUUID->"65240efb-89fd-4bdb-ad7b-\
26b981551c8a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"l0", " ", "=", " ", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"m", " ", "=", " ", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kr", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cr", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ib", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ia", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Fw", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Fx", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xg", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Mf", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fw", " ", ":=", " ", 
   RowBox[{"f", " ", "*", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"w", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fx", " ", ":=", " ", 
   RowBox[{"1", " ", "*", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"zg", "'"}], "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mx", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"1", " ", "*", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"th", "'"}], "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mj", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"1", " ", "*", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"th", "[", "t", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mw", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"L", " ", "*", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"o", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"za", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"zg", "[", "t", "]"}], " ", "-", " ", 
    RowBox[{"d", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"th", "[", "t", "]"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"th2", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"th", "[", "t", "]"}], " ", "+", " ", 
     RowBox[{"ga", "[", "t", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"xp", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{"xg", " ", "-", " ", 
     RowBox[{"d", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"th", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"l", "[", "t", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"th2", "[", "t", "]"}], "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zp", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "d"}], ")"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"th", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"l", "[", "t", "]"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"th2", "[", "t", "]"}], "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"k", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"l", "[", "t", "]"}], " ", "-", " ", "l0"}], ")"}]}], " ", "+",
     " ", 
    RowBox[{"c", "*", 
     RowBox[{
      RowBox[{"l", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Mab", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"kr", "*", 
     RowBox[{"ga", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"cr", "*", 
     RowBox[{
      RowBox[{"ga", "'"}], "[", "t", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", 
       RowBox[{
        RowBox[{"xp", "''"}], "[", "t", "]"}]}], " ", "==", " ", 
      RowBox[{
       RowBox[{"F", "[", "t", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"th2", "[", "t", "]"}], "]"}]}]}], ",", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"m", "*", 
       RowBox[{
        RowBox[{"zp", "''"}], "[", "t", "]"}]}], " ", "==", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
       RowBox[{"m", "*", "g"}]}]}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Ib", "*", 
       RowBox[{
        RowBox[{"th2", "''"}], "[", "t", "]"}]}], " ", "==", " ", 
      RowBox[{
       RowBox[{"Mab", "[", "t", "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], " ", "*", " ", 
        RowBox[{"l", "[", "t", "]"}]}]}]}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"Fw", "[", "t", "]"}], " ", "-", " ", 
       RowBox[{"M", "*", "g"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}], " ", "-", " ", "Fx", " ", 
       "-", " ", "Ff"}], " ", "==", " ", 
      RowBox[{"M", "*", 
       RowBox[{
        RowBox[{"zg", "''"}], "[", "t", "]"}]}]}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Ia", "*", 
       RowBox[{
        RowBox[{"th", "''"}], "[", "t", "]"}]}], " ", "==", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Mab", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], "*", "d"}], " ", "+", " ", 
       RowBox[{"Mw", "[", "t", "]"}], " ", "-", " ", 
       RowBox[{"Mx", "[", "t", "]"}], " ", "-", " ", "Mf", " ", "-", " ", 
       RowBox[{"Mj", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "[", "t", "]"}], " ", "==", " ", 
      RowBox[{"l0", " ", "-", " ", 
       RowBox[{
        RowBox[{"1", "/", "k"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "*", "g"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"c", "/", 
            RowBox[{"Cos", "[", 
             RowBox[{"th2", "[", "t", "]"}], "]"}]}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"zp", "[", "t", "]"}], "-", 
             RowBox[{"za", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"th", "[", "0", "]"}], " ", "==", " ", 
      RowBox[{
       RowBox[{"th", "'"}], "[", "0", "]"}], " ", "==", " ", 
      RowBox[{"ga", "[", "0", "]"}], " ", "==", " ", 
      RowBox[{
       RowBox[{"ga", "'"}], "[", "0", "]"}], " ", "==", " ", 
      RowBox[{"l", "[", "0", "]"}], " ", "==", " ", 
      RowBox[{
       RowBox[{"l", "'"}], "[", "0", "]"}], " ", "==", " ", 
      RowBox[{"zg", "[", "0", "]"}], " ", "==", " ", 
      RowBox[{
       RowBox[{"zg", "'"}], "[", "0", "]"}], " ", "==", " ", "0"}]}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"th", ",", " ", "ga", ",", " ", "zg", ",", " ", "l"}], "}"}], ",",
    " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.872379849174556*^9, 3.87237990364727*^9}, {
   3.8723799392844477`*^9, 3.872380055691536*^9}, {3.8723800980386257`*^9, 
   3.8723801150958242`*^9}, {3.872380151170192*^9, 3.872380330361754*^9}, {
   3.872380361316489*^9, 3.872380420278923*^9}, 3.872380454438857*^9, 
   3.872381029276565*^9, {3.8723811523015747`*^9, 3.8723811592795477`*^9}, 
   3.8723812673609943`*^9, {3.8723813712227488`*^9, 3.872381397580284*^9}, 
   3.872381445294174*^9, 3.87238150352351*^9, {3.872381639271892*^9, 
   3.872381685523172*^9}, 3.872382100823228*^9, {3.87238222279412*^9, 
   3.8723822297065983`*^9}, {3.87238248503997*^9, 3.872382540239208*^9}, {
   3.872383494195633*^9, 3.8723835249272213`*^9}, {3.8723835639991217`*^9, 
   3.8723836381145372`*^9}, {3.87238374047845*^9, 3.87238388767207*^9}, {
   3.872383919634287*^9, 3.87238400129539*^9}, {3.872384037949774*^9, 
   3.872384064652401*^9}, 3.872384094758359*^9, {3.8723841378157997`*^9, 
   3.872384173807303*^9}, {3.872384205157013*^9, 3.872384208145677*^9}, {
   3.872384248581175*^9, 3.872384335422352*^9}, 3.8723845391141863`*^9},
 FormatType->"InputForm",
 CellLabel->
  "In[1219]:=",ExpressionUUID->"90f7b68a-cd09-4ad8-bc58-fe0ab678c2a5"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "overdet", 
   "\"\:56e0\:53d8\:91cf \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"ga\\\
\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"l\\\", \
\\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"th\\\", \\\"[\\\", \
\\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"zg\\\", \\\"[\\\", \\\"t\\\", \
\\\"]\\\"}]}], \\\"}\\\"}]\\) \
\:7684\:4e2a\:6570\:5c11\:4e8e\:65b9\:7a0b\:4e2a\:6570\:ff0c\:56e0\:6b64\:65b9\
\:7a0b\:7ec4\:662f\:8d85\:5b9a\:7684.\"", 2, 1249, 235, 26169652805324344028, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.872379954071795*^9, 3.872379972728837*^9}, 
   3.8723801169232063`*^9, 3.8723802035987167`*^9, 3.872380244572028*^9, {
   3.87238035442663*^9, 3.872380420975429*^9}, 3.872380458700145*^9, 
   3.872381030207486*^9, 3.872381176202648*^9, 3.8723812684669733`*^9, 
   3.872381391273498*^9, {3.87238149704943*^9, 3.8723815093087254`*^9}, 
   3.872381565741344*^9, {3.872381660395494*^9, 3.8723816861530313`*^9}, 
   3.872382962519417*^9, 3.87238347436712*^9, {3.872383635203724*^9, 
   3.872383638372283*^9}, 3.872384004602066*^9, {3.872384070046978*^9, 
   3.872384098805382*^9}, 3.8723842106767683`*^9, {3.8723843008897753`*^9, 
   3.8723843357838297`*^9}, 3.872384544456105*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[1219]:=",ExpressionUUID->"21cc30e6-097b-4e23-\
b40d-baaf35881862"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"th", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["th", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["l", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ga", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["th", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"l", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["ga", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "+", 
           RowBox[{
            SuperscriptBox["th", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
       
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["l", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"th", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["th", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"l", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ga", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["th", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"ga", "[", "t", "]"}], "+", 
         RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"l", "[", "t", "]"}], "+", 
         RowBox[{
          SuperscriptBox["l", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"th", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["th", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["l", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ga", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["th", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"l", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["ga", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "+", 
           RowBox[{
            SuperscriptBox["th", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], "+", 
       
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["l", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"th", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["th", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"l", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["ga", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["th", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"-", "9.8`"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"l", "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["l", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["ga", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{
        SuperscriptBox["th", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"ga", "[", "t", "]"}], "+", 
       RowBox[{
        SuperscriptBox["ga", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"l", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"l", "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["l", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "9.8`"}], "-", "Ff", "-", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["zg", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"l", "[", "t", "]"}], "+", 
          RowBox[{
           SuperscriptBox["l", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
      "\[Equal]", 
      RowBox[{
       SuperscriptBox["zg", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["th", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"Abs", "[", 
        RowBox[{"th", "[", "t", "]"}], "]"}], "-", 
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["th", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"o", " ", "t"}], "]"}], "-", 
       RowBox[{"ga", "[", "t", "]"}], "+", 
       RowBox[{"l", "[", "t", "]"}], "-", 
       RowBox[{
        SuperscriptBox["ga", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{
        SuperscriptBox["l", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"l", "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "8.8`"}], "-", 
       RowBox[{
        RowBox[{"Sec", "[", 
         RowBox[{
          RowBox[{"ga", "[", "t", "]"}], "+", 
          RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"ga", "[", "t", "]"}], "+", 
             RowBox[{"th", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"l", "[", "t", "]"}]}], "-", 
          RowBox[{"zg", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"th", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox["th", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
      RowBox[{"ga", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox["ga", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
      RowBox[{"l", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox["l", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
      RowBox[{"zg", "[", "0", "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox["zg", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"th", ",", "ga", ",", "zg", ",", "l"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8723798664037743`*^9, {3.8723799540850277`*^9, 3.872379972740424*^9}, 
   3.872380116936481*^9, 3.872380203606373*^9, 3.872380244580727*^9, {
   3.872380354453377*^9, 3.8723804209982023`*^9}, 3.8723804587281523`*^9, 
   3.872381030246719*^9, 3.8723811762396097`*^9, 3.872381268481023*^9, 
   3.872381391288418*^9, {3.87238149706112*^9, 3.872381509320874*^9}, 
   3.872381565752409*^9, {3.872381660407836*^9, 3.872381686164927*^9}, 
   3.872382962531765*^9, 3.8723834743782063`*^9, {3.872383635217197*^9, 
   3.872383638381222*^9}, 3.872384004624895*^9, {3.872384070069375*^9, 
   3.872384098826158*^9}, 3.8723842107046137`*^9, {3.872384300915162*^9, 
   3.872384335792635*^9}, 3.872384544469495*^9},
 CellLabel->
  "Out[1249]=",ExpressionUUID->"ceee476b-ce46-4e69-ad12-3274f1e7c374"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"aaa", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"t", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"First", "[", "ggg", "]"}], "/.", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"aaa", "'"}], "[", 
        RowBox[{
         RowBox[{"ggg", "'"}], "[", "t", "]"}], "]"}], " ", "==", " ", "3"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"ggg", "[", "0", "]"}], "==", "0"}]}], "}"}], ",", " ", 
    RowBox[{"{", "ggg", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8723843505412683`*^9, 3.872384492829438*^9}, {
  3.872384555780744*^9, 3.872384566771446*^9}},
 CellLabel->
  "In[1254]:=",ExpressionUUID->"8658dbbc-ac83-48e5-b6bc-eb76938791a8"],

Cell[BoxData[
 TemplateBox[{
  "First", "normal", 
   "\"\\!\\(\\*RowBox[{\\\"First\\\", \\\"[\\\", \\\"ggg\\\", \\\"]\\\"}]\\) \
\:4e2d\:7684\:4f4d\:7f6e \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \:5904\:5e94\:8be5\
\:662f\:975e\:539f\:5b50\:8868\:8fbe\:5f0f.\"", 2, 1255, 236, 
   26169652805324344028, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8723845672117043`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[1254]:=",ExpressionUUID->"6206f1ac-8df6-4f53-\
b680-67335bf5f23c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8723844105975227`*^9, 3.8723844281669416`*^9}, {
  3.872384462987823*^9, 3.8723844931531982`*^9}, {3.87238455661475*^9, 
  3.872384567221017*^9}},
 CellLabel->
  "Out[1255]=",ExpressionUUID->"cd3aac67-966d-4fed-b3b7-239759e2565b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "%1185", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[1186]:=",ExpressionUUID->"e9af6481-4ff2-4603-9c1f-32fd76ee90e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVxXk0GwYAB+DgWbSdlmKqE6Hq1hSN6qHxcyQTR8gp7oiqHu7imVJkcXRl
TBtvT9SxVr2w16ilnRqVbp2ZY5vSN02HOtpN32qtF2H6+mz743ufnTiTk6JP
IBB8//P/TeV3ifLMfhphaZiu4v5Ao094plEtNv20cQ7sP2oNYJhCUb1H2YGH
o/uI5WJznP2JkTrmYQ4y5WWjF9MGI5ICTaZiLyzFmkWzLXtYfPx1Nu03W7R4
13TOBLjAlnQi/mfSfnR3Pb18x50CF+t2syudTiA//pa1MuiJLPed7x46uoHX
NjJgFk+FieJSOCGVgjGa0zGMH4ZQnU3t1XlA2trJMs85Cv5Cx5pW7oWSyQtZ
fy8fx5vqhMg/j1BxZrKmII5Pw/spUhPdhjeGQ5OrewsB/vlDUiO5D0oaHJMZ
Kn/YKNnx3qKjEAS+M3Q2CkT5+de/7CEdx3WBVv6IHwSrjD06Qr8v6jn1vYQa
Og40KMsMLtLQ1h3YJpll4MhmqsjQFOCty02qrIJhpVZ6NWgBh1Zi2HwGE8yR
b9j6U/5IV14pNLgfgtpM6UjWjQAIOoYOKnShkHUZ5adVBCJRz/j2l8xw9EjY
F85GB2F70GYvuYIFm+aY8UBnOtxfEVUp/REIifyQ02nEgE/R1YGSikjUXGv1
MNMw4JpfcPIzezZqy2b8tw18BDe7U2+GxtmYV2haNPJgnN5aXF/M5YCZ3hR1
6xwTOvadB9+ZcJH9o0XArvAQXOXXZY/e46K7n1uRQw6FdPz+kiyKB5qObXn7
VShuFRRPBK3yUD1EfFo0HoblKfoNUiMfrz0lGyHN4chtTzrWe1gAc6oq+GYp
C7ucKu8WPRMgYqJz1YAXgbfWBJ1+SRTSn3TnNptGwp6xTZm+V4h6i9OX9CSR
iLW1Zul/L0RAi97o85eRWMiQdAtF0eBode11cWwUZqxuTG+Pwafnwpxcxthg
ta32neiJQbiH9HEAlYOcYAZOsmKRpbYk2bdz0NF6vUu1Hgtyc83n0p1cUNJ5
miFZHNauJX81mcfFSppMMuARD7czMtHycy7UpGcms9Px+KtM4V/K4mE+4KJY
nZcA41NW/TODPOy2cmwcIydCkLb8u/NBPkr3JYQODCXCVS13XWvgg/yrds7H
U4SEOYVpFVGAylQ/45vlIpDCGh2asgT44N4h67wpEXylLx7lLwhwYNHd5olL
Ej6ZrXf040Rh0XElTlmcBH6FXUdVXxTU+6OLX4wmofKfHQ++cBPC4e1wXY+t
GPS+aaKrTAjV5YXyuUwxaFZLG1tbQqzs7trcGhTjX2+Io6A=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$304798#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 100.}, {0., 149.9999974576271}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwVxXk0GwYAB+DgWbSdlmKqE6Hq1hSN6qHxcyQTR8gp7oiqHu7imVJkcXRl
TBtvT9SxVr2w16ilnRqVbp2ZY5vSN02HOtpN32qtF2H6+mz743ufnTiTk6JP
IBB8//P/TeV3ifLMfhphaZiu4v5Ao094plEtNv20cQ7sP2oNYJhCUb1H2YGH
o/uI5WJznP2JkTrmYQ4y5WWjF9MGI5ICTaZiLyzFmkWzLXtYfPx1Nu03W7R4
13TOBLjAlnQi/mfSfnR3Pb18x50CF+t2syudTiA//pa1MuiJLPed7x46uoHX
NjJgFk+FieJSOCGVgjGa0zGMH4ZQnU3t1XlA2trJMs85Cv5Cx5pW7oWSyQtZ
fy8fx5vqhMg/j1BxZrKmII5Pw/spUhPdhjeGQ5OrewsB/vlDUiO5D0oaHJMZ
Kn/YKNnx3qKjEAS+M3Q2CkT5+de/7CEdx3WBVv6IHwSrjD06Qr8v6jn1vYQa
Og40KMsMLtLQ1h3YJpll4MhmqsjQFOCty02qrIJhpVZ6NWgBh1Zi2HwGE8yR
b9j6U/5IV14pNLgfgtpM6UjWjQAIOoYOKnShkHUZ5adVBCJRz/j2l8xw9EjY
F85GB2F70GYvuYIFm+aY8UBnOtxfEVUp/REIifyQ02nEgE/R1YGSikjUXGv1
MNMw4JpfcPIzezZqy2b8tw18BDe7U2+GxtmYV2haNPJgnN5aXF/M5YCZ3hR1
6xwTOvadB9+ZcJH9o0XArvAQXOXXZY/e46K7n1uRQw6FdPz+kiyKB5qObXn7
VShuFRRPBK3yUD1EfFo0HoblKfoNUiMfrz0lGyHN4chtTzrWe1gAc6oq+GYp
C7ucKu8WPRMgYqJz1YAXgbfWBJ1+SRTSn3TnNptGwp6xTZm+V4h6i9OX9CSR
iLW1Zul/L0RAi97o85eRWMiQdAtF0eBode11cWwUZqxuTG+Pwafnwpxcxthg
ta32neiJQbiH9HEAlYOcYAZOsmKRpbYk2bdz0NF6vUu1Hgtyc83n0p1cUNJ5
miFZHNauJX81mcfFSppMMuARD7czMtHycy7UpGcms9Px+KtM4V/K4mE+4KJY
nZcA41NW/TODPOy2cmwcIydCkLb8u/NBPkr3JYQODCXCVS13XWvgg/yrds7H
U4SEOYVpFVGAylQ/45vlIpDCGh2asgT44N4h67wpEXylLx7lLwhwYNHd5olL
Ej6ZrXf040Rh0XElTlmcBH6FXUdVXxTU+6OLX4wmofKfHQ++cBPC4e1wXY+t
GPS+aaKrTAjV5YXyuUwxaFZLG1tbQqzs7trcGhTjX2+Io6A=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$304798#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 100.}, {0., 149.9999974576271}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 100.}}, {
   5, 7, 1, {17}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{0., 
   0.00006843080479244553, 0.00013686160958489106`, 0.6844449095340402, 
   1.3687529574584956`, 2.053061005382951, 8.896141484627504, 
   15.739221963872057`, 22.58230244311661, 32.58230244311661, 
   42.58230244311661, 52.58230244311661, 62.58230244311661, 72.58230244311662,
    82.58230244311662, 91.2911512215583, 100.}}, {
   Developer`PackedArrayForm, {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 
    26, 28, 30, 32, 34}, {0., 1.5, 0.00010264620718866829`, 1.5, 
    0.00020529241437733657`, 1.4999999999999998`, 1.0266673643010602`, 
    1.5000000000000002`, 2.0531294361877435`, 1.5000000000000002`, 
    3.0795915080744267`, 1.5, 13.344212226941256`, 1.5, 23.608832945808086`, 
    1.5, 33.87345366467491, 1.5000000000000002`, 48.87345366467491, 1.5, 
    63.87345366467491, 1.5, 78.87345366467491, 1.5, 93.87345366467491, 1.5, 
    108.87345366467491`, 1.5, 123.87345366467491`, 1.5, 136.93672683233746`, 
    1.5, 150., 1.5}}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.872384515228435*^9},
 CellLabel->
  "Out[1186]=",ExpressionUUID->"5b468e88-1242-462a-919d-c9dacc9be1c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"%1186", "[", "\[FormalX]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0.`", ",", "100.`"}], "}"}]}], "]"}]], "Input",\

 NumberMarks->False,
 CellLabel->
  "In[1187]:=",ExpressionUUID->"12370b42-6397-4090-919f-e39a550195a2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkXk4lAkAh/Eo8tDqckSSatF2ULLu7xe5M4zzc4zjQ8a1hMg2WVFTGjOu
WR0iytHlSGRlXT0hNsVssotd7FaIJNQwJWv/+D3vn+/zPr9tVJRzsISYmJjD
yv6nRsbSjQK1VrNC9y8f35V3mtVJa2+NZF4jMtt9++m8MqL1REWxFrOSyBxI
OanGqyPadY6FrGY2E/xX/G5JXgfxJF1g8zHkOcGfyP8k5PYTnUap9VMhw4RC
hAbnA3eM6MoaPDYe8p7wKA9ym+YKCbtGKdqbkGViofvswymuFLrl9NdIMuRR
s7FXjs1RgnmGZUuZoxJivtPraTTWQPA+kZyunDoUrYX8zg1acNAO/qBgvQNz
jYph18P2ovrFqeOdBlpg+6kpXdy1H8brd1VK/rQbd7l+qRZ+BxHyOTu/hNTB
5kSfiIUzBohqHztQ6bAfpbcGu9lxxrjgtXrnUoQenp1Lqzt5wwyBHSeP6jL1
caFvSHbnM6BVSpke7mmAnjYBS97CHLrrknMn4ozwSnZEp7LfAv5zprtpESY4
H7+3yIhuiaKCNlUh1wwL+ny3xLdWuM8zGhQ4A7Iv+21MWDaIe2jqlH/kECou
+ixMztqiuatkNs3bHGpVC5O0NHuEWhs2hpIW2DLZl1cg6YCrN3Vrw8MO4y2r
K6PoGg1Zc42noxMscTeeFsBXdsKb28fjmTFW2I0/yGd9TnhslX0pJcUaG2oj
Z0eL6BB3HPgnI9kGaNj+NtzfGWKHHogXJtqipcpG3EDFBecVhQ6Cc3YopSc+
/Ou1C6K9Ah8JU+3xIrWrd/G6K0ZP6wURPx8BM0CT8z7KDRtzLg+kFTnAce9c
oKahO0rldyV25NHASh++0jfvjtaYrZaadxwhn9sfy2jxQIF6oaqpqxPe6czc
9k4i0cgSiTF7nKDSkCB+1cAT2+ylvmz3oOPejIyoVsILNc+1OX++oINb1+Rk
1eyF9PavOuoMZ/RqJ9lWcbyREzsR5j/kDJ89voWZdj5gbVL7RsPTBYbq5Qr3
VzFwS3tVV9yIC1hNUvsqexhYPS+u3OrrCunplJJtPF+U6dxLKhhzhejJmqZI
bz9oU7dpS5FuKOhcFp1a749B2/pqt0k3BAllrJKj/SG48eMeItYdf4tUqKiX
/li4TzfRmHWHyMq0/PLBACz/ElPL/sEDLTIK0q+zA2CvY2XJ+ugBg+L5A1sW
AtDB2BcaHkvCjf0vL9OdwvpAZkP+cRI0O94RfZKCL7NIrieBhPVaQ5khTwqf
YjZU67FIGObyzmoyKOw4LxQtnSGhUmrIagqkkFzdnJ6ZS2KkLSN0KpqCkZRT
VW09iYhVJodtOBTYsmkS4w0kgjvfiE+nU+hd98h1cxMJBjerOYdHgamqt5j0
aMW/acxoOIvCRV0lc5vfSOjuzNaNv0Rh3nvk94EhEsLD42rFJRQQoPyt3DCJ
GemcIdsyCpyjzieIURLjT02vvL9JQePYY9Xi1yQGXHM2Gd+lQGffDI6cXvk5
yExWUE3hKme07toMiVqtic6EGgrjmZtlBLMkKqZyzm15sNKTl16hLyRRGDch
EVpP4Wlhm1joIonLBvyWtQ0UFEu/Oud9JpH1xSyp5lcK1J3vS7qXSFxomTD2
aqJQURUtXF4mkXKGv7jcTOE/zNI40A==
       "]]},
     Annotation[#, "Charting`Private`Tag$305215#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0., 149.9999969387755}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872384518056361*^9},
 CellLabel->
  "Out[1187]=",ExpressionUUID->"f17be9d5-1d6e-4fe0-8a53-cdb4798adae6"]
}, Open  ]]
},
WindowSize->{1280.25, 756.},
WindowMargins->{{0, Automatic}, {0.75, Automatic}},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (2022\:5e746\:670816\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b81ade99-16dd-43c8-870c-c7b4ac56ee5e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6895, 192, 459, "Input",ExpressionUUID->"5c6c9304-457d-4870-b50e-c2f7f12a0e46"],
Cell[7478, 216, 513, 8, 49, "Output",ExpressionUUID->"41234679-40bd-4c24-b287-9f40184f33a5"]
}, Open  ]],
Cell[8006, 227, 384, 9, 84, "ExternalLanguage",ExpressionUUID->"6a22db1a-3031-4276-b1de-c6fbc5d56260"],
Cell[CellGroupData[{
Cell[8415, 240, 803, 15, 84, "ExternalLanguage",ExpressionUUID->"81f94e21-5bfb-477b-b0de-298444f91706"],
Cell[CellGroupData[{
Cell[9243, 259, 432, 7, 25, "Print",ExpressionUUID->"4b11bb34-d558-4950-a223-9387e9816a16"],
Cell[9678, 268, 464, 8, 25, "Print",ExpressionUUID->"30470a32-7759-4547-a9a3-92d7ec98b857"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10191, 282, 567, 16, 186, "ExternalLanguage",ExpressionUUID->"c98cf591-20dc-44c0-8eb8-41682ceda441"],
Cell[10761, 300, 50262, 938, 86, "Output",ExpressionUUID->"16279f05-5aaf-444f-8190-0ec3985817cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61060, 1243, 255, 5, 50, "ExternalLanguage",ExpressionUUID->"33a29bdb-dac5-4873-8324-98cfa50260f4"],
Cell[CellGroupData[{
Cell[61340, 1252, 230, 4, 23, "Print",ExpressionUUID->"a87e8531-b062-4ec4-94fd-957327ca2c02"],
Cell[61573, 1258, 264, 5, 25, "Print",ExpressionUUID->"a4a747a3-70b1-4cb3-a384-3eaa98657510"]
}, Open  ]],
Cell[61852, 1266, 79426, 1451, 85, "Output",ExpressionUUID->"f5015f0e-5705-4963-a802-9a7942820afa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141315, 2722, 298, 6, 45, "Input",ExpressionUUID->"7bf65818-e4fb-42d7-9da2-05b917fbb128"],
Cell[141616, 2730, 1605, 44, 257, "Output",ExpressionUUID->"96d6614f-ec3e-44c9-b455-b20c2ff73f86"]
}, Open  ]],
Cell[143236, 2777, 152, 3, 29, "Input",ExpressionUUID->"72b856b3-20ea-4b27-81a2-77d3d0214fd4"],
Cell[143391, 2782, 169, 3, 29, InheritFromParent,ExpressionUUID->"65240efb-89fd-4bdb-ad7b-26b981551c8a"],
Cell[CellGroupData[{
Cell[143585, 2789, 8784, 246, 968, InheritFromParent,ExpressionUUID->"90f7b68a-cd09-4ad8-bc58-fe0ab678c2a5"],
Cell[152372, 3037, 1415, 24, 28, "Message",ExpressionUUID->"21cc30e6-097b-4e23-b40d-baaf35881862"],
Cell[153790, 3063, 10705, 292, 183, "Output",ExpressionUUID->"ceee476b-ce46-4e69-ad12-3274f1e7c374"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164532, 3360, 888, 26, 84, "Input",ExpressionUUID->"8658dbbc-ac83-48e5-b6bc-eb76938791a8"],
Cell[165423, 3388, 499, 11, 28, "Message",ExpressionUUID->"6206f1ac-8df6-4f53-b680-67335bf5f23c"],
Cell[165925, 3401, 381, 9, 49, "Output",ExpressionUUID->"cd3aac67-966d-4fed-b3b7-239759e2565b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166343, 3415, 167, 4, 60, "Input",ExpressionUUID->"e9af6481-4ff2-4603-9c1f-32fd76ee90e5"],
Cell[166513, 3421, 14256, 283, 85, "Output",ExpressionUUID->"5b468e88-1242-462a-919d-c9dacc9be1c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180806, 3709, 303, 9, 62, "Input",ExpressionUUID->"12370b42-6397-4090-919f-e39a550195a2"],
Cell[181112, 3720, 3429, 76, 250, "Output",ExpressionUUID->"f17be9d5-1d6e-4fe0-8a53-cdb4798adae6"]
}, Open  ]]
}
]
*)


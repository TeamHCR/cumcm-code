import sys
from wolframclient.evaluation import WolframLanguageSession
from wolframclient.language import wl, wlexpr


def solve_P2():
    session = WolframLanguageSession()
    session.evaluate("""
Clear["Global`*"];
M = 4866; m = 2433; k = 80000; c = 10000; omega = 2.2143; k1 = 1025 * 9.8 * Pi;
f = 4890; c0 = 167.8395; m0 = 1165.992;
start = 510; stop = 520; dim = 0.01;
P2[cm2_] := Sum[cm2 * ((x1'[i] - x2'[i])^2) * dim, {i, start, stop, dim}] /. 
  NDSolve[{m*x2''[t]==k*(x1[t]-x2[t])+cm2*(x1'[t]-x2'[t]), 
    f*Cos[omega * t]==k*(x1[t]-x2[t])+cm2*(x1'[t]-x2'[t])+k1*x1[t]+c0*x1'[t]+m0*x1''[t]+M*x1''[t], 
    x1[0]==x2[0]==x1'[0]==x2'[0]==0},
  {x1, x2}, {t, start, stop}]
""")

    def PP2(x, d):
        return session.evaluate(wl.Evaluate(wlexpr(f'First[P2[{x}]-P2[{x-d}]]')))

    def find(start, stop, f, esp=2*1e-5, n=100):
        d = (stop - start) / n
        print(f"find({start}, {stop}, {d})")
        m = (start + stop) / 2
        v = f(m, d)
        if abs(v) < esp:
            return m
        if v < 0:
            return find(start, m, f)
        return find(m, stop, f)

    res = find(30020, 100000, PP2)
    session.stop()
    return res


"""
find(0, 100000, 1000.0)
find(0, 50000.0, 500.0)
find(25000.0, 50000.0, 250.0)
find(25000.0, 37500.0, 125.0)
find(31250.0, 37500.0, 62.5)
find(34375.0, 37500.0, 31.25)
find(35937.5, 37500.0, 15.625)
find(36718.75, 37500.0, 7.8125)
find(36718.75, 37109.375, 3.90625)
find(36914.0625, 37109.375, 1.953125)
find(36914.0625, 37011.71875, 0.9765625)
find(36962.890625, 37011.71875, 0.48828125)
find(36962.890625, 36987.3046875, 0.244140625)
find(36975.09765625, 36987.3046875, 0.1220703125)
find(36975.09765625, 36981.201171875, 0.06103515625)
find(36975.09765625, 36978.1494140625, 0.030517578125)
find(36975.09765625, 36976.62353515625, 0.0152587890625)
find(36975.09765625, 36975.860595703125, 0.00762939453125)
find(36975.47912597656, 36975.860595703125, 0.003814697265625)
find(36975.669860839844, 36975.860595703125, 0.0019073486328125)
find(36975.669860839844, 36975.765228271484, 0.00095367431640625)
find(36975.717544555664, 36975.765228271484, 0.000476837158203125)
find(36975.717544555664, 36975.741386413574, 0.0002384185791015625)
find(36975.717544555664, 36975.72946548462, 0.00011920928955078125)
find(36975.72350502014, 36975.72946548462, 5.9604644775390625e-05)
find(36975.72648525238, 36975.72946548462, 2.9802322387695312e-05)
find(36975.72648525238, 36975.7279753685, 1.4901161193847656e-05)
find(36975.72723031044, 36975.7279753685, 7.450580596923828e-06)
find(36975.72760283947, 36975.7279753685, 3.725290298461914e-06)
find(36975.727789103985, 36975.7279753685, 1.862645149230957e-06)
find(36975.727789103985, 36975.72788223624, 9.313225746154785e-07)
find(36975.72783567011, 36975.72788223624, 4.6566128730773926e-07)
find(36975.72783567011, 36975.72785895318, 2.3283064365386963e-07)
find(36975.72783567011, 36975.727847311646, 1.1641532182693481e-07)
find(36975.72783567011, 36975.72784149088, 5.820766091346741e-08)
find(36975.72783567011, 36975.7278385805, 2.9103830456733704e-08)
find(36975.727837125305, 36975.7278385805, 1.4551915228366852e-08)
find(36975.7278378529, 36975.7278385805, 7.275957614183426e-09)
find(36975.7278382167, 36975.7278385805, 3.637978807091713e-09)
find(36975.7278382167, 36975.7278383986, 1.8189894035458565e-09)
find(36975.7278382167, 36975.72783830765, 9.094947017729282e-10)
find(36975.7278382167, 36975.72783826217, 4.547473508864641e-10)
find(36975.727838239436, 36975.72783826217, 2.2737367544323206e-10)
find(36975.727838239436, 36975.72783825081, 1.1372321750968695e-10)
find(36975.72783824512, 36975.72783825081, 5.689798854291439e-11)
find(36975.72783824512, 36975.72783824796, 2.8448994271457196e-11)
find(36975.727838246545, 36975.72783824796, 1.418811734765768e-11)
find(36975.72783824726, 36975.72783824796, 7.057678885757923e-12)
find(36975.72783824726, 36975.72783824761, 3.4924596548080443e-12)
36975.72783824743
"""

if __name__ == "__main__":
    print(solve_P2())
    sys.exit(0)
